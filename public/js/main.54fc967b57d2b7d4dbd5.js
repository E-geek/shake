(()=>{"use strict";var n,e={30:(n,e,t)=>{var i,a,r,s,o,l=t(0),d=t(11),A=t(37),c=t(39),p=t(20),h=t(36),m=async function(n,e=null){var t,i,a,r;t=null;try{i={method:"GET"},null!=e&&(i.method="POST",i.headers={"Content-Type":"application/json;charset=utf-8"},i.body=JSON.stringify(e)),a=await fetch(n,i);try{t=await a.json()}catch(n){r=await a.text(),t={error:`Parse error after response: ${a.status} ${r}`}}}catch(e){t={error:`Request to ${n} failed`}}return{status:a.status,error:(null!=t?t.error:void 0)||null,data:t||null}},u=function(){class n{constructor(){(0,h.ky)(this),this.meta={variants:[],order:[],pointer:0,prev:-1}}setId(n){this.id=n}initDone(){this.isInit=!0}setMeta(n){var e;this.meta=n,null!=n&&null!=n.pointer&&n.pointer>=0&&(null!=(e=n.variants)?e.length:void 0)>0&&(this.actual=n.variants[n.order[n.pointer]],n.prev>=0&&(this.prev=n.variants[n.prev]))}processResponse(n){200===n.status?(this.setMeta(n.data),this.loading=!1):alert(`We have problem: ${n.error}`)}async newList(){var n;200===(n=await async function(){return await m("/api/")}()).status?(0,h.z)((()=>{var e,t;({id:e,meta:t}=n.data),this.id=e,this.setMeta(t),this.loading=!1})):alert(`We have problem: ${n.error}`)}async choseList(n){var e;this.id=n,e=await async function(n){return await m(`/api/id/${n}`)}(n),this.processResponse(e)}async save({variants:n}){var e;this.loading=!0,e=await async function({id:n,newPassword:e,pass:t,variants:i}){return await m("/api/save",{id:n,newPassword:e,pass:t,variants:i})}({id:this.id,variants:n.filter((function(n){return!!n.trim()}))}),this.processResponse(e)}async shake(){var n;this.loading=!0,n=await async function(n){return await m(`/api/shake/?id=${n}`)}(this.id),this.processResponse(n)}async next(){var n;this.loading=!0,n=await async function(n){return await m(`/api/next/?id=${n}`)}(this.id),this.processResponse(n)}}return n.prototype.isInit=!1,n.prototype.id="",n.prototype.meta=null,n.prototype.actual="",n.prototype.prev="",n.prototype.loading=!0,n}.call(void 0),C=function(){class n{constructor(){(0,h.ky)(this)}setEdit(n){this.isEdit=n}}return n.prototype.isEdit=!1,n}.call(void 0);i=8745,a=new(function(){class n{getListAsArray(){return this.actualList?[...this.actualList.entries()]:[]}constructor(){(0,h.ky)(this)}updateListItem(n,e){this.actualList.set(n,e)}addListItem(){this.actualList.set(i+=7,"")}removeListItem(n){this.actualList.delete(n)}setPass(n){this.pass=n}setPassConfirm(n){this.passConfirm=n}setProtect(n){this.protect=n}edit(n){var e;e=n.map((n=>[i+=7,n])),this.actualList=new Map(e.slice(0)),this.sourceList=e}reset(){this.actualList=new Map(this.sourceList.slice(0))}drop(){this.actualList=null,this.sourceList=null,this.protect=!1,this.pass="",this.passConfirm=""}}return n.prototype.protect=!1,n.prototype.pass="",n.prototype.passConfirm="",n.prototype.actualList=null,n.prototype.sourceList=null,n}.call(void 0)),s=new u,o=new C;var f=l.createContext(r={listStore:s,uiStore:o,editStore:a});window.T=r;var g=()=>l.useContext(f),b=({height:n,className:e})=>{var t;return t={display:"block",height:`${16*(n||1)}px`},l.createElement("div",{className:e,style:t})},v=t(2),x=t.n(v),y=t(3),w=t.n(y),E=t(4),k=t.n(E),B=t(5),_=t.n(B),S=t(6),Z=t.n(S),T=t(7),$=t.n(T),j=t(12),L={};L.styleTagTransform=$(),L.setAttributes=_(),L.insert=k().bind(null,"head"),L.domAPI=w(),L.insertStyleElement=Z();x()(j.Z,L);j.Z&&j.Z.locals&&j.Z.locals;var O=function(){return l.createElement("div",{className:"loading"},"Loading...")},R=t(13),N={};N.styleTagTransform=$(),N.setAttributes=_(),N.insert=k().bind(null,"head"),N.domAPI=w(),N.insertStyleElement=Z();x()(R.Z,N);R.Z&&R.Z.locals&&R.Z.locals;var Y,P=function({onCreate:n}){return l.createElement("div",{className:"empty"},l.createElement("h1",null,"This list empty."),l.createElement("div",{className:"button",onClick:n},"Fill!"))},z=({width:n,className:e})=>{var t;return t={display:"block",width:`${16*(n||1)}px`},l.createElement("div",{className:e,style:t})};function F(){return F=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n},F.apply(this,arguments)}const I=function(n){return l.createElement("svg",F({width:24,height:24,fill:"none",xmlns:"http://www.w3.org/2000/svg"},n),Y||(Y=l.createElement("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2ZM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9A7.902 7.902 0 0 1 4 12Zm3.1 6.31A7.902 7.902 0 0 0 12 20c4.42 0 8-3.58 8-8 0-1.85-.63-3.55-1.69-4.9L7.1 18.31Z",fill:"#FF7D30"})))};var W=t(14),Q={};Q.styleTagTransform=$(),Q.setAttributes=_(),Q.insert=k().bind(null,"head"),Q.domAPI=w(),Q.insertStyleElement=Z();x()(W.Z,Q);W.Z&&W.Z.locals&&W.Z.locals;var M=(0,A.Pi)((function({list:n}){var e,t,i,a,r,s;return({editStore:i,uiStore:s,listStore:a}=g()),e=i.getListAsArray(),(0,l.useEffect)((()=>i.edit(n)),[]),(0,l.useEffect)((()=>{if(0===e.length||e[e.length-1][1])return i.addListItem()}),[e]),t=function(){i.drop(),s.setEdit(!1)},r=async function(){await a.save({variants:e.map((([,n])=>n))}),i.drop(),s.setEdit(!1)},l.createElement("div",{className:"edit-wrapper"},l.createElement("div",{className:"edit__back"},l.createElement("div",{className:"edit__back-button",onClick:t},"â‡  Back")),l.createElement("div",{className:"edit"},e.map((([n,e])=>l.createElement("div",{className:"edit__item",key:n},l.createElement("input",{type:"text",value:e,onChange:e=>{i.updateListItem(n,e.target.value)}}),l.createElement(z,{height:1}),l.createElement("div",{className:"edit__remove",onClick:()=>{i.removeListItem(n)}},l.createElement(I,null))))),l.createElement(b,{height:2}),l.createElement("div",{className:"edit__buttons"},l.createElement("div",{className:"button button--orange",onClick:()=>i.reset()},"Reset"),l.createElement(z,{height:2}),l.createElement("div",{className:"button",onClick:r},"Save"))))})),q=t(15),X={};X.styleTagTransform=$(),X.setAttributes=_(),X.insert=k().bind(null,"head"),X.domAPI=w(),X.insertStyleElement=Z();x()(q.Z,X);q.Z&&q.Z.locals&&q.Z.locals;var U=(0,A.Pi)((function(){var n,e,t,i,a,r;return({listStore:e,uiStore:r}=g()),n=(0,p.k6)(),t=(0,p.TH)(),(0,l.useEffect)((async function(){e.isInit||(e.initDone(),"/"===t.pathname?(await e.newList(),r.setEdit(!0)):await e.choseList(t.pathname.replace("/","")))}),[t.href,e.isInit]),(0,l.useEffect)((function(){if(e.id&&t.pathname!==`/${e.id}`)return n.push(`/${e.id}`)}),[e.id]),!e.loading&&e.isInit&&(null!=(i=e.meta)?i.variants:void 0)?null==e.meta?l.createElement(l.Fragment,null,"Data is miss"):r.isEdit?l.createElement(M,{list:null!=(a=e.meta)?a.variants:void 0}):e.meta.variants.length?l.createElement("div",{className:"index"},l.createElement("h1",{className:"index__actual"},e.actual),l.createElement("h4",{className:"index__prev"},e.prev),l.createElement("div",{className:"index__buttons"},l.createElement("div",{className:"button",onClick:()=>{e.next()}},"Next"),l.createElement(b,{height:8}),l.createElement("div",{className:"button button--orange",onClick:()=>{e.shake()}},"Shake"),l.createElement(b,{height:4}),l.createElement("div",{className:"button",onClick:()=>{r.setEdit(!0)}},"Edit"))):l.createElement(P,{onCreate:()=>{r.setEdit(!0)}}):l.createElement(O,null)})),D=t(19),G={};G.styleTagTransform=$(),G.setAttributes=_(),G.insert=k().bind(null,"head"),G.domAPI=w(),G.insertStyleElement=Z();x()(D.Z,G);D.Z&&D.Z.locals&&D.Z.locals;var K;K=(0,A.Pi)((function(){return l.createElement("div",{className:"main"},l.createElement(c.VK,null,l.createElement(p.AW,{path:"/"},l.createElement(U,null))))})),d.render(l.createElement(K,null),document.getElementById("root"))},14:(n,e,t)=>{t.d(e,{Z:()=>o});var i=t(8),a=t.n(i),r=t(9),s=t.n(r)()(a());s.push([n.id,".edit{display:flex;flex-direction:column;padding:24px 16px;max-width:512px;width:100%;}@media (max-width:999.9px){.edit{padding:24px}}.edit-wrapper{display:flex;flex-direction:column;justify-content:center;align-items:center;justify-content:flex-start}.edit__back{width:100%;height:32px;border-bottom:1px solid #333;padding:7px 12px;}.edit__back-button{display:inline-flex;justify-content:center;align-items:center;height:18px;background:#eee;color:#444;padding:2px 4px;cursor:pointer;font-size:14px}.edit__item{display:flex;flex-direction:row;margin-bottom:16px;}.edit__item input{flex:1 1 0;height:48px;padding:0 8px;border:1px solid #333;border-radius:4px;font-size:20px}.edit__remove{display:flex;flex-direction:row;justify-content:center;align-items:center;flex-shrink:1;width:48px;height:48px;cursor:pointer;border-radius:8px;}.edit__remove svg *{fill:#ff7247}.edit__remove:hover{background:#eee;}.edit__remove:hover svg *{fill:#ff531f}.edit__buttons{display:flex;flex-direction:row;}.edit__buttons .button{width:50%}","",{version:3,sources:["webpack://./front/pages/edit.styl","webpack://./front/res/css/mixins.styl"],names:[],mappings:"AAGA,MACE,YAAS,CACT,qBAAgB,CAChB,iBAAS,CACT,eAAW,CACX,UAAO,CAAA,CAEA,2BAAA,MACL,YAAS,CAAA,CAEX,cCYA,YAAS,CACT,qBAAgB,CAChB,sBAAiB,CACjB,kBAAa,CDbX,0BAAiB,CAEnB,YACE,UAAO,CACP,WAAQ,CACR,4BAAe,CACf,gBAAS,CAAA,CAET,mBACE,mBAAS,CACT,sBAAiB,CACjB,kBAAa,CACb,WAAQ,CACR,eAAY,CACZ,UAAO,CACP,eAAS,CACT,cAAQ,CACR,cAAW,CAEf,YACE,YAAS,CACT,kBAAgB,CAChB,kBAAe,CAAA,CAEf,kBACE,UAAM,CACN,WAAQ,CACR,aAAS,CACT,qBAAQ,CACR,iBAAe,CACf,cAAW,CAEf,cCtBA,YAAS,CACT,kBAAgB,CAChB,sBAAiB,CACjB,kBAAa,CDqBX,aAAa,CACb,UAAO,CACP,WAAQ,CACR,cAAQ,CACR,iBAAe,CAAA,CAEf,oBACE,YAAM,CAER,oBACE,eAAY,CAAA,CAEZ,0BACE,YAAM,CAEZ,eACE,YAAS,CACT,kBAAgB,CAAA,CAEhB,uBACE,SAAO",sourcesContent:['@import "../res/css/variables.styl"\n@import "../res/css/mixins.styl"\n\n.edit\n  display: flex\n  flex-direction: column\n  padding: 24px 16px\n  max-width: 512px\n  width: 100%\n\n  @media is-mobile\n    padding: 24px\n\n  &-wrapper\n    center: column\n    justify-content: flex-start\n\n  &__back\n    width: 100%\n    height: 32px\n    border-bottom: 1px solid #333\n    padding: 7px 12px\n\n    &-button\n      display: inline-flex\n      justify-content: center\n      align-items: center\n      height: 18px\n      background: #ee\n      color: #44\n      padding: 2px 4px\n      cursor: pointer\n      font-size: 14px\n\n  &__item\n    display: flex\n    flex-direction: row\n    margin-bottom: 16px\n\n    input\n      flex: 1 1 0\n      height: 48px\n      padding: 0 8px\n      border: 1px solid #333\n      border-radius: 4px\n      font-size: 20px\n\n  &__remove\n    center: row\n    flex-shrink: 1\n    width: 48px\n    height: 48px\n    cursor: pointer\n    border-radius: 8px\n\n    svg *\n      fill: #FF7247\n\n    &:hover\n      background: #eee\n\n      svg *\n        fill: #FF531F\n\n  &__buttons\n    display: flex\n    flex-direction: row\n\n    .button\n      width: 50%\n',"@import './variables.styl'\n\nm-default-text()\n  font-size: 16px\n  line-height: 22px\n\nonly-desktop()\n  @media is-mobile\n    display: none\n\nonly-mobile()\n  @media is-desktop\n    display: none\n\nconstrain-width(w)\n  max-width: w\n  width: w\n  min-width: w\n\nconstrain-height(h)\n  max-height: h\n  height: h\n  min-height: h\n\ncenter($byAxis)\n  display: flex\n  flex-direction: $byAxis\n  justify-content: center\n  align-items: center\n\ncolor-links($link, $link-hover)\n  &,\n  &:visited,\n  &:active\n    color: $link\n\n    svg.aicon,\n    .aicon svg\n      fill: $link\n\n  &.link--disabled\n    color: $c-gray\n    cursor: default\n\n  @media (hover: hover) and (pointer: fine)\n    color: $link-hover\n\n    svg.aicon,\n    .aicon svg\n      fill: $link-hover\n\n    &.link--disabled\n      color: $c-gray\n      cursor: default\n\non-hover()\n  @media is-hoverable\n    &:hover\n      {block}\n\nellipsis()\n  overflow: hidden\n  white-space: nowrap\n  text-overflow: ellipsis\n"],sourceRoot:""}]);const o=s},13:(n,e,t)=>{t.d(e,{Z:()=>o});var i=t(8),a=t.n(i),r=t(9),s=t.n(r)()(a());s.push([n.id,".empty{padding-top:10vh;max-width:600px;margin:auto;}.empty h1{margin-bottom:48px;text-align:center;font-size:24px;font-weight:400}","",{version:3,sources:["webpack://./front/pages/empty.styl"],names:[],mappings:"AAGA,OACE,gBAAa,CACb,eAAW,CACX,WAAQ,CAAA,CAER,UACE,kBAAe,CACf,iBAAY,CACZ,cAAW,CACX,eAAa",sourcesContent:['@import "../res/css/variables.styl"\n@import "../res/css/mixins.styl"\n\n.empty\n  padding-top: 10vh\n  max-width: 600px\n  margin: auto\n\n  h1\n    margin-bottom: 48px\n    text-align: center\n    font-size: 24px\n    font-weight: 400\n'],sourceRoot:""}]);const o=s},15:(n,e,t)=>{t.d(e,{Z:()=>o});var i=t(8),a=t.n(i),r=t(9),s=t.n(r)()(a());s.push([n.id,".index{display:flex;flex-direction:column;justify-content:center;align-items:center;padding:16px;color:#212121;}@media (max-width:999.9px){.index{padding:16px 24px}}.index__actual{padding-top:min(12vw, 128px);margin-bottom:min(12vw, 96px);font-size:min(12vw, 128px);font-weight:600}.index__prev{margin-bottom:min(16vw, 128px);font-size:min(6vw, 64px);color:#444}.index__buttons{padding:0 16px}","",{version:3,sources:["webpack://./front/pages/index.styl","webpack://./front/res/css/mixins.styl"],names:[],mappings:"AAGA,OCsBE,YAAS,CACT,qBAAgB,CAChB,sBAAiB,CACjB,kBAAa,CDrBb,YAAS,CACT,aAAO,CAAA,CAEA,2BAAA,OACL,iBAAS,CAAA,CAEX,eACE,4BAAkC,CAClC,6BAAmC,CACnC,0BAAgC,CAChC,eAAa,CAEf,aACE,8BAAoC,CACpC,wBAA8B,CAC9B,UAAO,CAET,gBACE,cAAS",sourcesContent:["@import \"../res/css/variables.styl\"\n@import \"../res/css/mixins.styl\"\n\n.index\n  center: column\n  //justify-content: flex-start\n  //align-items: center\n  padding: 16px\n  color: #21\n\n  @media is-mobile\n    padding: 16px 24px\n\n  &__actual\n    padding-top: 'min(12vw, 128px)' % ''\n    margin-bottom: 'min(12vw, 96px)' % ''\n    font-size: 'min(12vw, 128px)' % ''\n    font-weight: 600;\n\n  &__prev\n    margin-bottom: 'min(16vw, 128px)' % ''\n    font-size: 'min(6vw, 64px)' % ''\n    color: #444\n\n  &__buttons\n    padding: 0 16px\n","@import './variables.styl'\n\nm-default-text()\n  font-size: 16px\n  line-height: 22px\n\nonly-desktop()\n  @media is-mobile\n    display: none\n\nonly-mobile()\n  @media is-desktop\n    display: none\n\nconstrain-width(w)\n  max-width: w\n  width: w\n  min-width: w\n\nconstrain-height(h)\n  max-height: h\n  height: h\n  min-height: h\n\ncenter($byAxis)\n  display: flex\n  flex-direction: $byAxis\n  justify-content: center\n  align-items: center\n\ncolor-links($link, $link-hover)\n  &,\n  &:visited,\n  &:active\n    color: $link\n\n    svg.aicon,\n    .aicon svg\n      fill: $link\n\n  &.link--disabled\n    color: $c-gray\n    cursor: default\n\n  @media (hover: hover) and (pointer: fine)\n    color: $link-hover\n\n    svg.aicon,\n    .aicon svg\n      fill: $link-hover\n\n    &.link--disabled\n      color: $c-gray\n      cursor: default\n\non-hover()\n  @media is-hoverable\n    &:hover\n      {block}\n\nellipsis()\n  overflow: hidden\n  white-space: nowrap\n  text-overflow: ellipsis\n"],sourceRoot:""}]);const o=s},12:(n,e,t)=>{t.d(e,{Z:()=>o});var i=t(8),a=t.n(i),r=t(9),s=t.n(r)()(a());s.push([n.id,".loading{padding-top:10vh;text-align:center;font-size:24px;font-weight:300}","",{version:3,sources:["webpack://./front/pages/loading.styl"],names:[],mappings:"AAAA,SACE,gBAAa,CACb,iBAAY,CACZ,cAAW,CACX,eAAa",sourcesContent:[".loading\n  padding-top: 10vh\n  text-align: center\n  font-size: 24px\n  font-weight: 300\n"],sourceRoot:""}]);const o=s},19:(n,e,t)=>{t.d(e,{Z:()=>o});var i=t(8),a=t.n(i),r=t(9),s=t.n(r)()(a());s.push([n.id,"html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;outline:0;border:0;font-family:inherit;font-size:100%;font-style:inherit;font-weight:inherit;vertical-align:baseline}body{background:#fff;color:#000;line-height:1}ol,ul{list-style:none}table{border-spacing:0;border-collapse:separate;vertical-align:middle}caption,th,td{font-weight:normal;vertical-align:middle;text-align:left}a img{border:none}*{box-sizing:border-box;user-drag:none}html,body{display:block;margin:0;padding:0}body{font-family:'Roboto',helvetica,arial,sans-serif}.button{display:flex;justify-content:center;padding:8px 16px;border-radius:4px;font-size:18px;font-family:inherit;color:#fff;background:#326690;min-width:128px;cursor:pointer;user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0);}.button:hover{background:#285274}.button--orange{background:#ff7247;}.button--orange:hover{background:#ff531f}","",{version:3,sources:["webpack://./front/res/css/reset.styl","webpack://./front/res/css/main.styl"],names:[],mappings:"AAEE,yQAkIA,QAAQ,CACR,SAAS,CACT,SAAS,CACT,QAAQ,CAGR,mBAAa,CACb,cAAW,CACX,kBAAY,CACZ,mBAAa,CACb,uBAAgB,CAhFhB,KAmFA,eAAY,CACZ,UAAO,CACP,aAAa,CAlFb,MAEE,eAAY,CAEd,MAiFA,gBAAgB,CAChB,wBAAiB,CACjB,qBAAgB,CAhFhB,cAmFA,kBAAa,CACb,qBAAgB,CAChB,eAAY,CAhFZ,MACE,WAAQ,CCxEZ,EACE,qBAAY,CACZ,cAAW,CAEb,UAEE,aAAS,CACT,QAAQ,CACR,SAAS,CAEX,KACE,+CAAa,CAEf,QACE,YAAS,CACT,sBAAgB,CAChB,gBAAS,CACT,iBAAe,CACf,cAAW,CACX,mBAAa,CACb,UAAO,CACP,kBAAY,CACZ,eAAW,CACX,cAAQ,CACR,gBAAa,CACb,yCAA4C,CAAA,CAE5C,cACE,kBAAY,CAEd,gBACE,kBAAY,CAAA,CAEZ,sBACE,kBAAY",sourcesContent:["// Based on [Eric Meyer's reset](http://meyerweb.com/eric/thoughts/2007/05/01/reset-reloaded/)\nglobal-reset()\n  html,\n  body,\n  div,\n  span,\n  applet,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  big,\n  cite,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  ins,\n  kbd,\n  q,\n  s,\n  samp,\n  small,\n  strike,\n  strong,\n  sub,\n  sup,\n  tt,\n  var,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td\n    reset-box-model()\n    reset-font()\n\n  body\n    reset-body()\n\n  ol,\n  ul\n    list-style: none\n\n  table\n    reset-table()\n\n  caption,\n  th,\n  td\n    reset-table-cell()\n\n  a img\n    border: none\n\nnested-reset()\n  div,\n  span,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr\n    reset-box-model()\n    reset-font()\n\n  table\n    reset-table()\n\n  caption,\n  th,\n  td\n    reset-table-cell()\n\n  a img\n    border: none\n\nreset-box-model()\n  margin: 0\n  padding: 0\n  outline: 0\n  border: 0\n\nreset-font()\n  font-family: inherit\n  font-size: 100%\n  font-style: inherit\n  font-weight: inherit\n  vertical-align: baseline\n\nreset-body()\n  background: white\n  color: black\n  line-height: 1\n\nreset-table()\n  border-spacing: 0\n  border-collapse: separate\n  vertical-align: middle\n\nreset-table-cell()\n  font-weight: normal\n  vertical-align: middle\n  text-align: left\n\nreset-html5()\n  article,\n  aside,\n  canvas,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  section,\n  summary,\n  main\n    reset-box-model()\n    display: block\n\n  audio,\n  canvas,\n  video\n    display: inline-block\n    *display: inline\n    *zoom: 1\n\n  audio:not([controls]),\n  [hidden]\n    display: none\n","@import './reset.styl'\n@import './variables.styl'\n@import \"./mixins.styl\"\n\nglobal-reset()\n\n*\n  box-sizing: border-box\n  user-drag: none\n\nhtml,\nbody\n  display: block\n  margin: 0\n  padding: 0\n\nbody\n  font-family: $f-main\n\n.button\n  display: flex\n  justify-content center\n  padding: 8px 16px\n  border-radius: 4px\n  font-size: 18px\n  font-family: inherit\n  color: #fff\n  background: #326690\n  min-width: 128px\n  cursor: pointer\n  user-select: none\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0)\n\n  &:hover\n    background: #285274\n\n  &--orange\n    background: #FF7247\n\n    &:hover\n      background: #FF531F\n"],sourceRoot:""}]);const o=s}},t={};function i(n){var a=t[n];if(void 0!==a)return a.exports;var r=t[n]={id:n,exports:{}};return e[n](r,r.exports,i),r.exports}i.m=e,n=[],i.O=(e,t,a,r)=>{if(!t){var s=1/0;for(A=0;A<n.length;A++){for(var[t,a,r]=n[A],o=!0,l=0;l<t.length;l++)(!1&r||s>=r)&&Object.keys(i.O).every((n=>i.O[n](t[l])))?t.splice(l--,1):(o=!1,r<s&&(s=r));if(o){n.splice(A--,1);var d=a();void 0!==d&&(e=d)}}return e}r=r||0;for(var A=n.length;A>0&&n[A-1][2]>r;A--)n[A]=n[A-1];n[A]=[t,a,r]},i.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return i.d(e,{a:e}),e},i.d=(n,e)=>{for(var t in e)i.o(e,t)&&!i.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),i.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n={179:0};i.O.j=e=>0===n[e];var e=(e,t)=>{var a,r,[s,o,l]=t,d=0;if(s.some((e=>0!==n[e]))){for(a in o)i.o(o,a)&&(i.m[a]=o[a]);if(l)var A=l(i)}for(e&&e(t);d<s.length;d++)r=s[d],i.o(n,r)&&n[r]&&n[r][0](),n[s[d]]=0;return i.O(A)},t=self.webpackChunkshake=self.webpackChunkshake||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))})();var a=i.O(void 0,[517,978,486,457],(()=>i(30)));a=i.O(a)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
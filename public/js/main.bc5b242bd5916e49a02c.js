(()=>{"use strict";var n,e=[,,,,,,,,,,,,(n,e,t)=>{t.d(e,{Z:()=>r});var i=t(7),s=t.n(i),a=t(8),o=t.n(a)()(s());o.push([n.id,".loading{padding-top:10vh;text-align:center;font-size:24px;font-weight:300}","",{version:3,sources:["webpack://./front/pages/loading.styl"],names:[],mappings:"AAAA,SACE,gBAAa,CACb,iBAAY,CACZ,cAAW,CACX,eAAa",sourcesContent:[".loading\n  padding-top: 10vh\n  text-align: center\n  font-size: 24px\n  font-weight: 300\n"],sourceRoot:""}]);const r=o},(n,e,t)=>{t.d(e,{Z:()=>r});var i=t(7),s=t.n(i),a=t(8),o=t.n(a)()(s());o.push([n.id,".empty{padding-top:10vh;max-width:600px;margin:auto;}.empty h1{margin-bottom:48px;text-align:center;font-size:24px;font-weight:400}","",{version:3,sources:["webpack://./front/pages/empty.styl"],names:[],mappings:"AAGA,OACE,gBAAa,CACb,eAAW,CACX,WAAQ,CAAA,CAER,UACE,kBAAe,CACf,iBAAY,CACZ,cAAW,CACX,eAAa",sourcesContent:['@import "../res/css/variables.styl"\n@import "../res/css/mixins.styl"\n\n.empty\n  padding-top: 10vh\n  max-width: 600px\n  margin: auto\n\n  h1\n    margin-bottom: 48px\n    text-align: center\n    font-size: 24px\n    font-weight: 400\n'],sourceRoot:""}]);const r=o},(n,e,t)=>{t.d(e,{Z:()=>r});var i=t(7),s=t.n(i),a=t(8),o=t.n(a)()(s());o.push([n.id,".edit{display:flex;flex-direction:column;padding:24px 16px;max-width:512px;width:100%;}@media (max-width:999.9px){.edit{padding:24px}}.edit-wrapper{display:flex;flex-direction:column;justify-content:center;align-items:center;justify-content:flex-start}.edit__back{width:100%;height:32px;border-bottom:1px solid #333;padding:7px 12px;}.edit__back-button{display:inline-flex;justify-content:center;align-items:center;height:18px;background:#eee;color:#444;padding:2px 4px;cursor:pointer;font-size:14px}.edit__item{display:flex;flex-direction:row;margin-bottom:16px;}.edit__item input{flex:1 1 0;height:48px;padding:0 8px;border:1px solid #333;border-radius:4px;font-size:20px}.edit__remove{display:flex;flex-direction:row;justify-content:center;align-items:center;flex-shrink:1;width:48px;height:48px;cursor:pointer;border-radius:8px;}.edit__remove svg *{fill:#ff7247}.edit__remove:hover{background:#eee;}.edit__remove:hover svg *{fill:#ff531f}.edit__buttons{display:flex;flex-direction:row;}.edit__buttons .button{width:50%}","",{version:3,sources:["webpack://./front/pages/edit.styl","webpack://./front/res/css/mixins.styl"],names:[],mappings:"AAGA,MACE,YAAS,CACT,qBAAgB,CAChB,iBAAS,CACT,eAAW,CACX,UAAO,CAAA,CAEA,2BAAA,MACL,YAAS,CAAA,CAEX,cCYA,YAAS,CACT,qBAAgB,CAChB,sBAAiB,CACjB,kBAAa,CDbX,0BAAiB,CAEnB,YACE,UAAO,CACP,WAAQ,CACR,4BAAe,CACf,gBAAS,CAAA,CAET,mBACE,mBAAS,CACT,sBAAiB,CACjB,kBAAa,CACb,WAAQ,CACR,eAAY,CACZ,UAAO,CACP,eAAS,CACT,cAAQ,CACR,cAAW,CAEf,YACE,YAAS,CACT,kBAAgB,CAChB,kBAAe,CAAA,CAEf,kBACE,UAAM,CACN,WAAQ,CACR,aAAS,CACT,qBAAQ,CACR,iBAAe,CACf,cAAW,CAEf,cCtBA,YAAS,CACT,kBAAgB,CAChB,sBAAiB,CACjB,kBAAa,CDqBX,aAAa,CACb,UAAO,CACP,WAAQ,CACR,cAAQ,CACR,iBAAe,CAAA,CAEf,oBACE,YAAM,CAER,oBACE,eAAY,CAAA,CAEZ,0BACE,YAAM,CAEZ,eACE,YAAS,CACT,kBAAgB,CAAA,CAEhB,uBACE,SAAO",sourcesContent:['@import "../res/css/variables.styl"\n@import "../res/css/mixins.styl"\n\n.edit\n  display: flex\n  flex-direction: column\n  padding: 24px 16px\n  max-width: 512px\n  width: 100%\n\n  @media is-mobile\n    padding: 24px\n\n  &-wrapper\n    center: column\n    justify-content: flex-start\n\n  &__back\n    width: 100%\n    height: 32px\n    border-bottom: 1px solid #333\n    padding: 7px 12px\n\n    &-button\n      display: inline-flex\n      justify-content: center\n      align-items: center\n      height: 18px\n      background: #ee\n      color: #44\n      padding: 2px 4px\n      cursor: pointer\n      font-size: 14px\n\n  &__item\n    display: flex\n    flex-direction: row\n    margin-bottom: 16px\n\n    input\n      flex: 1 1 0\n      height: 48px\n      padding: 0 8px\n      border: 1px solid #333\n      border-radius: 4px\n      font-size: 20px\n\n  &__remove\n    center: row\n    flex-shrink: 1\n    width: 48px\n    height: 48px\n    cursor: pointer\n    border-radius: 8px\n\n    svg *\n      fill: #FF7247\n\n    &:hover\n      background: #eee\n\n      svg *\n        fill: #FF531F\n\n  &__buttons\n    display: flex\n    flex-direction: row\n\n    .button\n      width: 50%\n',"@import './variables.styl'\n\nm-default-text()\n  font-size: 16px\n  line-height: 22px\n\nonly-desktop()\n  @media is-mobile\n    display: none\n\nonly-mobile()\n  @media is-desktop\n    display: none\n\nconstrain-width(w)\n  max-width: w\n  width: w\n  min-width: w\n\nconstrain-height(h)\n  max-height: h\n  height: h\n  min-height: h\n\ncenter($byAxis)\n  display: flex\n  flex-direction: $byAxis\n  justify-content: center\n  align-items: center\n\ncolor-links($link, $link-hover)\n  &,\n  &:visited,\n  &:active\n    color: $link\n\n    svg.aicon,\n    .aicon svg\n      fill: $link\n\n  &.link--disabled\n    color: $c-gray\n    cursor: default\n\n  @media (hover: hover) and (pointer: fine)\n    color: $link-hover\n\n    svg.aicon,\n    .aicon svg\n      fill: $link-hover\n\n    &.link--disabled\n      color: $c-gray\n      cursor: default\n\non-hover()\n  @media is-hoverable\n    &:hover\n      {block}\n\nellipsis()\n  overflow: hidden\n  white-space: nowrap\n  text-overflow: ellipsis\n"],sourceRoot:""}]);const r=o},(n,e,t)=>{t.d(e,{Z:()=>r});var i=t(7),s=t.n(i),a=t(8),o=t.n(a)()(s());o.push([n.id,".index{display:flex;flex-direction:column;justify-content:center;align-items:center;padding:16px;color:#212121;}@media (max-width:999.9px){.index{padding:16px 24px}}.index__actual{padding-top:min(12vw, 128px);margin-bottom:min(12vw, 96px);font-size:min(12vw, 128px);font-weight:600}.index__prev{margin-bottom:min(16vw, 128px);font-size:min(6vw, 64px);color:#444}.index__buttons{padding:0 16px}","",{version:3,sources:["webpack://./front/pages/index.styl","webpack://./front/res/css/mixins.styl"],names:[],mappings:"AAGA,OCsBE,YAAS,CACT,qBAAgB,CAChB,sBAAiB,CACjB,kBAAa,CDrBb,YAAS,CACT,aAAO,CAAA,CAEA,2BAAA,OACL,iBAAS,CAAA,CAEX,eACE,4BAAkC,CAClC,6BAAmC,CACnC,0BAAgC,CAChC,eAAa,CAEf,aACE,8BAAoC,CACpC,wBAA8B,CAC9B,UAAO,CAET,gBACE,cAAS",sourcesContent:["@import \"../res/css/variables.styl\"\n@import \"../res/css/mixins.styl\"\n\n.index\n  center: column\n  //justify-content: flex-start\n  //align-items: center\n  padding: 16px\n  color: #21\n\n  @media is-mobile\n    padding: 16px 24px\n\n  &__actual\n    padding-top: 'min(12vw, 128px)' % ''\n    margin-bottom: 'min(12vw, 96px)' % ''\n    font-size: 'min(12vw, 128px)' % ''\n    font-weight: 600;\n\n  &__prev\n    margin-bottom: 'min(16vw, 128px)' % ''\n    font-size: 'min(6vw, 64px)' % ''\n    color: #444\n\n  &__buttons\n    padding: 0 16px\n","@import './variables.styl'\n\nm-default-text()\n  font-size: 16px\n  line-height: 22px\n\nonly-desktop()\n  @media is-mobile\n    display: none\n\nonly-mobile()\n  @media is-desktop\n    display: none\n\nconstrain-width(w)\n  max-width: w\n  width: w\n  min-width: w\n\nconstrain-height(h)\n  max-height: h\n  height: h\n  min-height: h\n\ncenter($byAxis)\n  display: flex\n  flex-direction: $byAxis\n  justify-content: center\n  align-items: center\n\ncolor-links($link, $link-hover)\n  &,\n  &:visited,\n  &:active\n    color: $link\n\n    svg.aicon,\n    .aicon svg\n      fill: $link\n\n  &.link--disabled\n    color: $c-gray\n    cursor: default\n\n  @media (hover: hover) and (pointer: fine)\n    color: $link-hover\n\n    svg.aicon,\n    .aicon svg\n      fill: $link-hover\n\n    &.link--disabled\n      color: $c-gray\n      cursor: default\n\non-hover()\n  @media is-hoverable\n    &:hover\n      {block}\n\nellipsis()\n  overflow: hidden\n  white-space: nowrap\n  text-overflow: ellipsis\n"],sourceRoot:""}]);const r=o},(n,e,t)=>{t.d(e,{Z:()=>r});var i=t(7),s=t.n(i),a=t(8),o=t.n(a)()(s());o.push([n.id,"html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td{margin:0;padding:0;outline:0;border:0;font-family:inherit;font-size:100%;font-style:inherit;font-weight:inherit;vertical-align:baseline}body{background:#fff;color:#000;line-height:1}ol,ul{list-style:none}table{border-spacing:0;border-collapse:separate;vertical-align:middle}caption,th,td{font-weight:normal;vertical-align:middle;text-align:left}a img{border:none}*{box-sizing:border-box;user-drag:none}html,body{display:block;margin:0;padding:0}body{font-family:'Roboto',helvetica,arial,sans-serif}.button{display:flex;justify-content:center;padding:8px 16px;border-radius:4px;font-size:18px;font-family:inherit;color:#fff;background:#326690;min-width:128px;cursor:pointer;user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0);}.button:hover{background:#285274}.button--orange{background:#ff7247;}.button--orange:hover{background:#ff531f}","",{version:3,sources:["webpack://./front/res/css/reset.styl","webpack://./front/res/css/main.styl"],names:[],mappings:"AAEE,yQAkIA,QAAQ,CACR,SAAS,CACT,SAAS,CACT,QAAQ,CAGR,mBAAa,CACb,cAAW,CACX,kBAAY,CACZ,mBAAa,CACb,uBAAgB,CAhFhB,KAmFA,eAAY,CACZ,UAAO,CACP,aAAa,CAlFb,MAEE,eAAY,CAEd,MAiFA,gBAAgB,CAChB,wBAAiB,CACjB,qBAAgB,CAhFhB,cAmFA,kBAAa,CACb,qBAAgB,CAChB,eAAY,CAhFZ,MACE,WAAQ,CCxEZ,EACE,qBAAY,CACZ,cAAW,CAEb,UAEE,aAAS,CACT,QAAQ,CACR,SAAS,CAEX,KACE,+CAAa,CAEf,QACE,YAAS,CACT,sBAAgB,CAChB,gBAAS,CACT,iBAAe,CACf,cAAW,CACX,mBAAa,CACb,UAAO,CACP,kBAAY,CACZ,eAAW,CACX,cAAQ,CACR,gBAAa,CACb,yCAA4C,CAAA,CAE5C,cACE,kBAAY,CAEd,gBACE,kBAAY,CAAA,CAEZ,sBACE,kBAAY",sourcesContent:["// Based on [Eric Meyer's reset](http://meyerweb.com/eric/thoughts/2007/05/01/reset-reloaded/)\nglobal-reset()\n  html,\n  body,\n  div,\n  span,\n  applet,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  big,\n  cite,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  ins,\n  kbd,\n  q,\n  s,\n  samp,\n  small,\n  strike,\n  strong,\n  sub,\n  sup,\n  tt,\n  var,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td\n    reset-box-model()\n    reset-font()\n\n  body\n    reset-body()\n\n  ol,\n  ul\n    list-style: none\n\n  table\n    reset-table()\n\n  caption,\n  th,\n  td\n    reset-table-cell()\n\n  a img\n    border: none\n\nnested-reset()\n  div,\n  span,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr\n    reset-box-model()\n    reset-font()\n\n  table\n    reset-table()\n\n  caption,\n  th,\n  td\n    reset-table-cell()\n\n  a img\n    border: none\n\nreset-box-model()\n  margin: 0\n  padding: 0\n  outline: 0\n  border: 0\n\nreset-font()\n  font-family: inherit\n  font-size: 100%\n  font-style: inherit\n  font-weight: inherit\n  vertical-align: baseline\n\nreset-body()\n  background: white\n  color: black\n  line-height: 1\n\nreset-table()\n  border-spacing: 0\n  border-collapse: separate\n  vertical-align: middle\n\nreset-table-cell()\n  font-weight: normal\n  vertical-align: middle\n  text-align: left\n\nreset-html5()\n  article,\n  aside,\n  canvas,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  section,\n  summary,\n  main\n    reset-box-model()\n    display: block\n\n  audio,\n  canvas,\n  video\n    display: inline-block\n    *display: inline\n    *zoom: 1\n\n  audio:not([controls]),\n  [hidden]\n    display: none\n","@import './reset.styl'\n@import './variables.styl'\n@import \"./mixins.styl\"\n\nglobal-reset()\n\n*\n  box-sizing: border-box\n  user-drag: none\n\nhtml,\nbody\n  display: block\n  margin: 0\n  padding: 0\n\nbody\n  font-family: $f-main\n\n.button\n  display: flex\n  justify-content center\n  padding: 8px 16px\n  border-radius: 4px\n  font-size: 18px\n  font-family: inherit\n  color: #fff\n  background: #326690\n  min-width: 128px\n  cursor: pointer\n  user-select: none\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0)\n\n  &:hover\n    background: #285274\n\n  &--orange\n    background: #FF7247\n\n    &:hover\n      background: #FF531F\n"],sourceRoot:""}]);const r=o},(n,e,t)=>{var i,s,a,o,r,l=t(0),d=t(10),A=t(11),c=t(9),p=t(18),h=async function(n,e=null){var t,i,s,a;t=null;try{i={method:"GET"},null!=e&&(i.method="POST",i.headers={"Content-Type":"application/json;charset=utf-8"},i.body=JSON.stringify(e)),s=await fetch(n,i);try{t=await s.json()}catch(n){a=await s.text(),t={error:`Parse error after response: ${s.status} ${a}`}}}catch(e){t={error:`Request to ${n} failed`}}return{status:s.status,error:(null!=t?t.error:void 0)||null,data:t||null}},C=function(){class n{constructor(){(0,p.ky)(this),this.meta={variants:[],order:[],pointer:0,prev:-1}}setId(n){this.id=n}initDone(){this.isInit=!0}setMeta(n){var e;this.meta=n,null!=n&&null!=n.pointer&&n.pointer>=0&&(null!=(e=n.variants)?e.length:void 0)>0&&(this.actual=n.variants[n.order[n.pointer]],n.prev>=0&&(this.prev=n.variants[n.prev]))}processResponse(n){200===n.status?(this.setMeta(n.data),this.loading=!1):alert(`We have problem: ${n.error}`)}async newList(){var n;200===(n=await async function(){return await h("/api/")}()).status?(0,p.z)((()=>{var e,t;({id:e,meta:t}=n.data),this.id=e,this.setMeta(t),this.loading=!1})):alert(`We have problem: ${n.error}`)}async choseList(n){var e;this.id=n,e=await async function(n){return await h(`/api/id/${n}`)}(n),this.processResponse(e)}async save({variants:n}){var e;this.loading=!0,e=await async function({id:n,newPassword:e,pass:t,variants:i}){return await h("/api/save",{id:n,newPassword:e,pass:t,variants:i})}({id:this.id,variants:n.filter((function(n){return!!n.trim()}))}),this.processResponse(e)}async shake(){var n;this.loading=!0,n=await async function(n){return await h(`/api/shake/?id=${n}`)}(this.id),this.processResponse(n)}async next(){var n;this.loading=!0,n=await async function(n){return await h(`/api/next/?id=${n}`)}(this.id),this.processResponse(n)}}return n.prototype.isInit=!1,n.prototype.id="",n.prototype.meta=null,n.prototype.actual="",n.prototype.prev="",n.prototype.loading=!0,n}.call(void 0),m=function(){class n{constructor(){(0,p.ky)(this)}setEdit(n){this.isEdit=n}}return n.prototype.isEdit=!1,n}.call(void 0);i=8745,s=new(function(){class n{getListAsArray(){return this.actualList?[...this.actualList.entries()]:[]}constructor(){(0,p.ky)(this)}updateListItem(n,e){this.actualList.set(n,e)}addListItem(){this.actualList.set(i+=7,"")}removeListItem(n){this.actualList.delete(n)}setPass(n){this.pass=n}setPassConfirm(n){this.passConfirm=n}setProtect(n){this.protect=n}edit(n){var e;e=n.map((n=>[i+=7,n])),this.actualList=new Map(e.slice(0)),this.sourceList=e}reset(){this.actualList=new Map(this.sourceList.slice(0))}drop(){this.actualList=null,this.sourceList=null,this.protect=!1,this.pass="",this.passConfirm=""}}return n.prototype.protect=!1,n.prototype.pass="",n.prototype.passConfirm="",n.prototype.actualList=null,n.prototype.sourceList=null,n}.call(void 0)),o=new C,r=new m;var u=(0,l.kr)(a={listStore:o,uiStore:r,editStore:s});window.T=a;var g=()=>(0,c.qp)(u),f=({height:n,className:e})=>{var t;return t={display:"block",height:`${n=16*(n||1)}px`},(0,l.h)("div",{className:e,style:t})},b=t(1),v=t.n(b),x=t(2),y=t.n(x),w=t(3),k=t.n(w),B=t(4),E=t.n(B),_=t(5),S=t.n(_),Z=t(6),T=t.n(Z),$=t(12),j={};j.styleTagTransform=T(),j.setAttributes=E(),j.insert=k().bind(null,"head"),j.domAPI=y(),j.insertStyleElement=S();v()($.Z,j);$.Z&&$.Z.locals&&$.Z.locals;var L=function(){return(0,l.h)("div",{className:"loading"},"Loading...")},R=t(13),Y={};Y.styleTagTransform=T(),Y.setAttributes=E(),Y.insert=k().bind(null,"head"),Y.domAPI=y(),Y.insertStyleElement=S();v()(R.Z,Y);R.Z&&R.Z.locals&&R.Z.locals;var N=function({onCreate:n}){return(0,l.h)("div",{className:"empty"},(0,l.h)("h1",null,"This list empty."),(0,l.h)("div",{className:"button",onClick:n},"Fill!"))},O=({width:n,className:e})=>{var t;return t={display:"block",width:`${16*(n||1)}px`},(0,l.h)("div",{className:e,style:t})};function z(n){n.styles;var e=Object.assign({},n);return delete e.styles,(0,l.h)("svg",Object.assign({width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",xmlns:"http://www.w3.org/2000/svg"},e),["\n",(0,l.h)("g",{id:"svg-remove-CC4kS7E"},["\n",(0,l.h)("path",{id:"svg-remove-1Srqbzj","fill-rule":"evenodd","clip-rule":"evenodd",d:"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM4 12C4 7.58 7.58 4 12 4C13.85 4 15.55 4.63 16.9 5.69L5.69 16.9C4.63 15.55 4 13.85 4 12ZM7.1 18.31C8.45 19.37 10.15 20 12 20C16.42 20 20 16.42 20 12C20 10.15 19.37 8.45 18.31 7.1L7.1 18.31Z",fill:"#FF7D30"},[]),"\n"]),"\n"])}var F=t(14),P={};P.styleTagTransform=T(),P.setAttributes=E(),P.insert=k().bind(null,"head"),P.domAPI=y(),P.insertStyleElement=S();v()(F.Z,P);F.Z&&F.Z.locals&&F.Z.locals;var I=(0,d.Pi)((function({list:n}){var e,t,i,s,a,o;return({editStore:i,uiStore:o,listStore:s}=g()),e=i.getListAsArray(),(0,c.d4)((()=>i.edit(n)),[]),(0,c.d4)((()=>{if(0===e.length||e[e.length-1][1])return i.addListItem()}),[e]),t=function(){i.drop(),o.setEdit(!1)},a=async function(){await s.save({variants:e.map((([,n])=>n))}),i.drop(),o.setEdit(!1)},(0,l.h)("div",{className:"edit-wrapper"},(0,l.h)("div",{className:"edit__back"},(0,l.h)("div",{className:"edit__back-button",onClick:t},"⇠ Back")),(0,l.h)("div",{className:"edit"},e.map((([n,e])=>(0,l.h)("div",{className:"edit__item",key:n},(0,l.h)("input",{type:"text",value:e,onInput:e=>{i.updateListItem(n,e.target.value)}}),(0,l.h)(O,{height:1}),(0,l.h)("div",{className:"edit__remove",onClick:()=>{i.removeListItem(n)}},(0,l.h)(z,null))))),(0,l.h)(f,{height:2}),(0,l.h)("div",{className:"edit__buttons"},(0,l.h)("div",{className:"button button--orange",onClick:()=>i.reset()},"Reset"),(0,l.h)(O,{height:2}),(0,l.h)("div",{className:"button",onClick:a},"Save"))))})),M=t(15),Q={};Q.styleTagTransform=T(),Q.setAttributes=E(),Q.insert=k().bind(null,"head"),Q.domAPI=y(),Q.insertStyleElement=S();v()(M.Z,Q);M.Z&&M.Z.locals&&M.Z.locals;var W=(0,d.Pi)((function(){var n,e,t,i,s;return({listStore:n,uiStore:s}=g()),e=(0,A.bq)(),(0,c.d4)((async function(){n.isInit||(n.initDone(),"/"===e?(await n.newList(),s.setEdit(!0)):await n.choseList(e.replace("/","")))}),[e,n.isInit]),(0,c.d4)((function(){if(n.id&&e!==`/${n.id}`)return(0,A.BC)(`/${n.id}`)}),[n.id]),!n.loading&&n.isInit&&(null!=(t=n.meta)?t.variants:void 0)?null==n.meta?React.createElement(React.Fragment,null,"Data is miss"):s.isEdit?(0,l.h)(I,{list:null!=(i=n.meta)?i.variants:void 0}):n.meta.variants.length?(0,l.h)("div",{className:"index"},(0,l.h)("h1",{className:"index__actual"},n.actual),(0,l.h)("h4",{className:"index__prev"},n.prev),(0,l.h)("div",{className:"index__buttons"},(0,l.h)("div",{className:"button",onClick:()=>{n.next()}},"Next"),(0,l.h)(f,{height:8}),(0,l.h)("div",{className:"button button--orange",onClick:()=>{n.shake()}},"Shake"),(0,l.h)(f,{height:4}),(0,l.h)("div",{className:"button",onClick:()=>{s.setEdit(!0)}},"Edit"))):(0,l.h)(N,{onCreate:()=>{s.setEdit(!0)}}):(0,l.h)(L,null)})),q=t(16),X={};X.styleTagTransform=T(),X.setAttributes=E(),X.insert=k().bind(null,"head"),X.domAPI=y(),X.insertStyleElement=S();v()(q.Z,X);q.Z&&q.Z.locals&&q.Z.locals;var U;U=(0,d.Pi)((function(){return(0,l.h)("div",{className:"main"},(0,l.h)(A.F0,null,(0,l.h)(W,{path:"/"}),(0,l.h)(W,{path:"/:id"})))})),(0,l.sY)((0,l.h)(U,null),document.getElementById("root"))}],t={};function i(n){var s=t[n];if(void 0!==s)return s.exports;var a=t[n]={id:n,exports:{}};return e[n](a,a.exports,i),a.exports}i.m=e,n=[],i.O=(e,t,s,a)=>{if(!t){var o=1/0;for(A=0;A<n.length;A++){for(var[t,s,a]=n[A],r=!0,l=0;l<t.length;l++)(!1&a||o>=a)&&Object.keys(i.O).every((n=>i.O[n](t[l])))?t.splice(l--,1):(r=!1,a<o&&(o=a));if(r){n.splice(A--,1);var d=s();void 0!==d&&(e=d)}}return e}a=a||0;for(var A=n.length;A>0&&n[A-1][2]>a;A--)n[A]=n[A-1];n[A]=[t,s,a]},i.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return i.d(e,{a:e}),e},i.d=(n,e)=>{for(var t in e)i.o(e,t)&&!i.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),i.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n={179:0};i.O.j=e=>0===n[e];var e=(e,t)=>{var s,a,[o,r,l]=t,d=0;if(o.some((e=>0!==n[e]))){for(s in r)i.o(r,s)&&(i.m[s]=r[s]);if(l)var A=l(i)}for(e&&e(t);d<o.length;d++)a=o[d],i.o(n,a)&&n[a]&&n[a][0](),n[o[d]]=0;return i.O(A)},t=self.webpackChunkshake=self.webpackChunkshake||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))})();var s=i.O(void 0,[741],(()=>i(17)));s=i.O(s)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,